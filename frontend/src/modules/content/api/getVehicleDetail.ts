import { gql, QueryHookOptions, useQuery } from '@/api';

import { VehicleDetails } from '../types';

export const VEHICLE_QUERY = gql`
  query GetVehicleDetail($vehicleId: UUID!) {
    vehicleDetail(vehicleId: $vehicleId) {
      vehicle {
        id
        user {
          lastname
          firstname
          email
        }
        createdAt
        vin
        processedImagesArchiveUri
        allImagesArchiveUri
        make
        model
        modelYear
        bodyType
        fuelType
      }
      imageCounts {
        photoType
        count
      }
      images {
        id
        vehicleId
        image {
          name
          contentType
          sizeInBytes
          createdAt
          thumbnailUri
          uri
        }
        originalImage {
          name
          thumbnailUri
          uri
          contentType
          sizeInBytes
        }
        photoType
        position
        user {
          id
          email
          firstname
          lastname
          photoUrl
        }
        isAutoGenerated
      }
      coverImage {
        image {
          thumbnailUri
        }
      }
      videos {
        id
        vehicleId
        position
        user {
          id
          email
          firstname
          lastname
          photoUrl
        }
        video {
          id
          name
          contentType
          createdAt
          sizeInBytes
          thumbnailUri
          uri
          attachmentType
        }
      }
      videosCount
    }
  }
`;

export type GetVehicleQueryRequest = {
  vehicleId: string;
};

export type GetVehicleQueryResponse = {
  vehicleDetail: VehicleDetails;
};

export const useGetVehicleByIdQuery = (
  options?: QueryHookOptions<GetVehicleQueryResponse, GetVehicleQueryRequest>,
) => {
  return useQuery<GetVehicleQueryResponse, GetVehicleQueryRequest>(
    VEHICLE_QUERY,
    {
      fetchPolicy: 'no-cache',
      ...options,
    },
  );
};
